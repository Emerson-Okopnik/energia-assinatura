map $http_origin $cors_origin {
    default "";
    ~^{{ frontend_origin | regex_escape }}$ $http_origin;
}

log_format api_ext '$remote_addr $host "$request" $status rt=$request_time ust=$upstream_status urt=$upstream_response_time';

server {
    listen 80;
    server_name {{ api_domain }};
    root {{ release_path }}/public;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";

    add_header Access-Control-Allow-Origin $cors_origin always;
    add_header Access-Control-Allow-Credentials "true" always;
    add_header Vary "Origin" always;

    index index.php;

    location / {
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, Accept, Origin" always;
            add_header Access-Control-Max-Age 86400 always;
            add_header Access-Control-Allow-Credentials "true" always;
            return 204;
        }

        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php8.2-fpm.sock;
        fastcgi_param APP_ENV production;
        fastcgi_param APP_DEBUG false;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }

    client_max_body_size 20m;
    access_log /var/log/nginx/api_access.log api_ext;
    error_log  /var/log/nginx/api_error.log;
}
